// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id         Int          @id @default(autoincrement())
  name       String
  surname    String
  email      String?      @unique
  password   String
  activated  Boolean
  class      Class        @relation(fields: [classId], references: [id])
  classId    Int
  Challenges Challenges[]
  Skills     Skills[]
}

model Class {
  id       Int       @id
  name     String
  students Student[]
  day      String
  school   School    @relation(fields: [schoolId], references: [id])
  schoolId Int
  teachers Teacher[]
}

model School {
  id      Int     @id
  name    String  @unique
  classes Class[]
}

model Teacher {
  id          Int     @id @default(autoincrement())
  uid         String? @unique
  token       String? @unique
  displayName String
  name        String
  email       String  @unique
  role        Int
  classes     Class[]
}

model ChallengesHeaders {
  id         String       @unique
  name       String
  Challenges Challenges[]
}

model Challenges {
  student     Student           @relation(fields: [studentId], references: [id])
  studentId   Int
  challenge   ChallengesHeaders @relation(fields: [challengeId], references: [id])
  challengeId String

  @@unique([studentId, challengeId])
}

model SkillsHeaders {
  id     String   @unique
  name   String
  type   String
  Skills Skills[]
}

model Skills {
  student   Student       @relation(fields: [studentId], references: [id])
  studentId Int
  skill     SkillsHeaders @relation(fields: [skillId], references: [id])
  skillId   String

  @@unique([studentId, skillId])
}
